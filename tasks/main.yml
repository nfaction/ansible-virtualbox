---
################
# OS Variables #
################
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: update cache for apt
  apt:
    update_cache: true
    cache_valid_time: 3600
  when:
    - ansible_os_family == "Debian"

- name: install prereq packages
  package:
    name: "{{ item }}"
    state: present
    use: "{{ package_mgr_to_use }}"
  with_items:
    - "{{ prereq_packages }}"
  tags:
    - install-pkgs
    - prereq

###################################
# Configure keys and repositories #
###################################
- name: add apt key
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - "{{ virtualbox_apt_keys }}"
  register: apt_key
  until: apt_key | succeeded
  when:
    - ansible_os_family == "Debian"
  tags: apt_keys

- name: Add an rpm gpg key from a keyserver
  rpm_key:
    key: "{{ item.repo_key }}"
    state: present
  register: add_virtualbox_key
  with_items:
    - "{{ virtualbox_yum_repos | default([]) }}"
  when:
    - 'ansible_os_family == "RedHat"'
  tags:
    - package-repos

- name: install apt repository
  apt_repository:
    repo: "{{ item }}"
    state: present
    filename: "virtualbox"
  with_items:
    - "{{ apt_repos }}"
  when:
    - ansible_os_family == "Debian"

- name: configure yum repository
  yum_repository:
    name: "{{ item.repo_name }}"
    file: "{{ item.file }}"
    description: "{{ item.repo_description | default(omit) }}"
    baseurl: "{{ item.repo_baseurl }}"
    gpgkey: "{{ item.repo_key | default(omit) }}"
    gpgcheck: "{{ item.gpg_check | default(false) }}"
    repo_gpgcheck: "{{ item.repo_gpgcheck | default(omit) }}"
    enabled: "{{ item.enabled | default(true) }}"
    state: "{{ item.state | default(omit) }}"
  with_items:
    - "{{ virtualbox_yum_repos | default([]) }}"
  when:
    - 'ansible_os_family == "RedHat"'
  tags:
    - package-repos

- name: Update repo cache for the new repo
  command: yum makecache -y --disablerepo=* --enablerepo=virtualbox
  when:
    - add_virtualbox_key.changed
    - ansible_os_family == "RedHat"

####################
# Install Packages #
####################
- name: install virtualbox
  package:
    name: "{{ item }}"
    state: present
    use: "{{ package_mgr_to_use }}"
  with_items:
    - "{{ virtualbox_packages }}"
  tags:
    - install-pkgs

###############################
# Install VBox Extension Pack #
###############################
- name: Check if extension pack is already installed
  shell: "VBoxManage list extpacks"
  changed_when: false
  register: extpack_list

- name: Download VirtualBox extension pack
  get_url:
    url: "{{ extpack_url }}"
    dest: "{{ extpack_path }}"
  when:
    - 'extpack_list.stdout == "Extension Packs: 0"'
    - install_extpack | bool

- name: Install VirtualBox extension pack
  shell: "VBoxManage extpack install --replace --accept-license=56be48f923303c8cababb0bb4c478284b688ed23f16d775d729b89a2e8e5f9eb {{ extpack_path }}/{{ extpack }}"
  when:
    - 'extpack_list.stdout == "Extension Packs: 0"'
    - install_extpack | bool

#################
# Add VBox User #
#################
- name: add main user to vboxusers group
  user:
    name: "{{ vbox_user }}"
    groups: vboxusers
    append: true
  when:
    - configure_vbox_users | bool
